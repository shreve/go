#!/usr/bin/env ruby

require 'json'
require 'fileutils'

class Generator
  def initialize(db)
    @db = db
    @host = File.read(File.join(output_path, 'CNAME')).strip
  end

  def generate
    clean_directory
    generate_links
    generate_go_imports
    generate_index
  end

  def clean_directory
    files_to_clean.each { |file| FileUtils.rm_rf(file) }
  end

  def generate_links
    template = File.read(File.join(template_path, 'link.html'))

    @db["links"].each_pair do |code, url|
      File.open(File.join(output_path, "#{code}.html"), 'w+') do |file|
        file.write template.gsub('{{url}}', url)
      end
      Dir.mkdir File.join(output_path, code) rescue nil
      File.open(File.join(output_path, code, "index.html"), 'w+') do |file|
        file.write template.gsub('{{url}}', url)
      end
    end
  end

  def generate_go_imports
    template = File.read(File.join(template_path, 'go-import.html'))

    @db["go-imports"].each_pair do |code, url|
      body = template
        .gsub('{{url}}', url)
        .gsub('{{code}}', code)
        .gsub('{{host}}', @host)

      File.write(File.join(output_path, "#{code}.html"), body, mode: 'w+')
      Dir.mkdir File.join(output_path, code) rescue nil
      File.write(File.join(output_path, code, "index.html"), body, mode: 'w+')
    end
  end

  def generate_index
    path = File.join(output_path, 'this.html')
    if File.exist?(path)
      FileUtils.copy(path, File.join(output_path, 'index.html'))
    end
  end

  private

  def protected_files
    %w[CNAME].map { |name| File.join(output_path, name) }
  end

  def files_to_clean
    Dir.glob(output_path + '/*') - protected_files
  end

  def output_path
    File.expand_path('./docs')
  end

  def template_path
    File.expand_path('./templates')
  end
end

database = File.read(File.join(File.expand_path('./'), 'db.json'))
database = JSON.parse(database)

Generator.new(database).generate
